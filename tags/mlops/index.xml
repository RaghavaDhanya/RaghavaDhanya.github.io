<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Mlops on AI Logs</title><link>https://ai.ragv.in/tags/mlops/</link><description>Recent content in Mlops on AI Logs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2023 [Raghava Dhanya](https://ragv.in) | [License](/license) |</copyright><lastBuildDate>Wed, 21 Feb 2024 12:25:03 +0530</lastBuildDate><atom:link href="https://ai.ragv.in/tags/mlops/index.xml" rel="self" type="application/rss+xml"/><item><title>A Tale of a Suicidal Container</title><link>https://ai.ragv.in/posts/a-tale-of-suicidal-container/</link><pubDate>Wed, 21 Feb 2024 12:25:03 +0530</pubDate><guid>https://ai.ragv.in/posts/a-tale-of-suicidal-container/</guid><description>One fine day, I sat down to optimize the size of a Docker image. Like many times before, I opted for distroless images as my base, a choice I had made countless times before without a hitch.
Distroless images, for the uninitiated, are peak minimalism, containing only the essential libraries and binaries required to run the application. Not only do they trim the fat off the image size, but they also mitigate the risk of CVEs lurking within</description></item><item><title>Designing Machine Learning Systems for High Velocity Trading</title><link>https://ai.ragv.in/posts/high-velocity-trading-ml-systems/</link><pubDate>Tue, 20 Jun 2023 21:31:48 +0530</pubDate><guid>https://ai.ragv.in/posts/high-velocity-trading-ml-systems/</guid><description>As one of my works at Mu Sigma Labs, I was part of a research project on the High Velocity Time Series on early 2019. One of the goals was to create a high velocity trading app using Pair Trading.
The Requisite terms Long and Short trades Long trades are buying a security. Short is selling a security even when you don&amp;rsquo;t own it. It generally means that you are borrowing someone&amp;rsquo;s securities and selling them in the hopes of buying it back for lower cost later and returning it and hence, making a profit.</description></item><item><title>Python with a Dash of C++: Optimizing Recommendation Serving</title><link>https://ai.ragv.in/posts/python-with-a-dash-of-cpp-optimizing/</link><pubDate>Thu, 30 Jun 2022 16:54:09 +0530</pubDate><guid>https://ai.ragv.in/posts/python-with-a-dash-of-cpp-optimizing/</guid><description>Serving recommendation to 200+ millions of users for thousands of candidates with less than 100ms is hard but doing that in Python is harder. Why not add some compiled spice to it to make it faster? Using Cython you can add C++ components to your Python code. Isn&amp;rsquo;t all machine learning and statistics libraries already written in C and Cython to make them super fast? Yes. But there&amp;rsquo;s still some optimizations left on the table.</description></item><item><title>Go faster with Go: Golang for ML Serving</title><link>https://ai.ragv.in/posts/golang-for-machine-learning-serving/</link><pubDate>Mon, 20 Jun 2022 21:36:00 +0530</pubDate><guid>https://ai.ragv.in/posts/golang-for-machine-learning-serving/</guid><description>So the ask is to do 3 Million Predictions per second with as little resources as possible. Thankfully its one of the simpler model of Recommendation systems, Multi Armed Bandit(MAB). Multi Armed bandit usually involves sampling from distribution like Beta Distribution. That&amp;rsquo;s where the most time is spent. If we can concurrently do as many sampling as we can, we&amp;rsquo;ll use the resources well. Maximizing Resource utilization is the key to reducing overall resources needed for the model.</description></item><item><title>BPMN Pipeline Platform</title><link>https://ai.ragv.in/posts/bpmn-pipeline-platform/</link><pubDate>Mon, 20 Jun 2022 20:54:07 +0530</pubDate><guid>https://ai.ragv.in/posts/bpmn-pipeline-platform/</guid><description>One of my major work at Mu Sigma Labs was with BPMN based analytics automation/ pipeline platform. Based on an open source platform Activiti. I was the owner and developed, tested, maintained the platform. It served approximately 3k internal users and ran several critical reporting and data pipelines.
Technologies Used Java, Spring Boot as Backend. The platform itself supported scripting in Python, R for automation. Angular for Frontend.
BPMN Business Process Model and Notation (BPMN) is a standard for modeling business processes in a graphical notation.</description></item></channel></rss>